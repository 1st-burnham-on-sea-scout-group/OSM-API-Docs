FORMAT: 1A
HOST: https://osm.scouts.org.nz/

# Online Scout Manager

I'm documenting the Online Scout Manager API here as I discover it,
you can contribute by forking it on GitHub.

## Authorisation [/users.php?action=authorise]

### Authorise [POST]

Note you need email and password the first time to authorise your application against your account, 
after that you can use the usertoken.

request needs to be urlencoded

+ Parameters

    + token (string, required) - your OSM API token
    + apiid (string, required) - your OSM API ID
    + email (string, required) - your OSM login email address
    + password (string, required) - your OSM login password
    
+ Request (application/x-www-form-urlencoded)
    
        email={email}&
        password={password}&
        token={token}&
        apiid={apiid}

+ Response 200 (application/json)
        
        {
            "secret": "1234567890abcdef",
            "userid": "123"
        }

### Authenticating Other Endpoints [POST]
To authenticate _any_ other endpoints you'll need to submit this in the body

+ Parameters

    + token (string, required) - your OSM API token
    + apiid (string, required) - your OSM API ID
    + secret (string, required) - secret from auth call
    + userid (string, required) - userid from auth call
    
+ Request (application/x-www-form-urlencoded)

        token={token}&
        apiid={apiid}&
        userid={userid}&
        secret={secret}

## Sections [/api.php?action=getSectionConfig]

### Get Sections Config [POST]
Used to get the OSM configuration for a specific section

+ Response 200 (application/json)

        {
            "123": {
                "numscouts": 999,
                "subscription_level": 3,
                "subscription_expires": "2050-12-31",
                "portal": {
                    "badges": 1,
                    "programme": 1,
                    "events": 1,
                    "details": 1,
                    "emailbolton": 1
                },
                "portalExpires": {
                    "programme": "2050-12-31",
                    "badges": "2050-12-31",
                    "events": "2050-12-31",
                    "details": "2050-12-31",
                    "emailbolton": "2050-12-31",
                    "badgesA": 0,
                    "programmeA": 0,
                    "eventsA": 0,
                    "detailsA": 0,
                    "emailboltonA": 0
                },
                "section_type": "nzadults",
                "sectionType": "nzadults",
                "parentSectionId": "0",
                "hierarchy_lowest_level": "level_1",
                "hierarchy_operating_level": "level_0"
            },
            "124":{}
        }

### Get List of Sections (Nationally) [POST /ext/members/sectionplanning/?action=listSections]
Used to get a list of potentail sections. This is very useful for determining where a member should be transferred to, or where an event can be shared to.

+ Parameters
    + section (string, optional) - filters the result down by a specific section.
    
+ Request (application/x-www-form-urlencoded)
        
        &section=

+ Response 200 (application/json)

        {
            "identifier": "sectionid",
            "label": "name",
            "items": [
                {
                    "name": "NZ Test: Rovers",
                    "sectionid": "8"
                },
                {
                    "name": "Avon Cosgrove Rovers: Rovers",
                    "sectionid": "1007"
                },
                {
                    "name": "Bays Rover Crew: Rovers",
                    "sectionid": "1029"
                },
                {
                    "name": "Crew Otago Rover: Rovers",
                    "sectionid": "1110"
                }
            ]
        }

### Terms [/ext/]

## Get List of Terms [POST /api.php?action=getTerms]
Used to get a list of terms that you have access to.

+ Response 200 (application/json)

        {
            "455": [
                {
                "termid": "8986",
                "sectionid": "1478",
                "name": "2017 - Term 1",
                "startdate": "2017-01-01",
                "enddate": "2017-04-30",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10441",
                "sectionid": "1478",
                "name": "2017 - Term 2",
                "startdate": "2017-05-01",
                "enddate": "2017-07-23",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10442",
                "sectionid": "1478",
                "name": "2017 - Term 3",
                "startdate": "2017-07-24",
                "enddate": "2017-10-08",
                "master_term": null,
                "past": true
                },
                {
                "termid": "10443",
                "sectionid": "1478",
                "name": "2017 - Term 4",
                "startdate": "2017-10-09",
                "enddate": "2018-01-28",
                "master_term": null,
                "past": true
                }
            ]
        }

## Members [/ext/members/contact/]

### Get Member List [POST /ext/members/contact/?action=getListOfMembers&sectionid={}&termid={}]

+ Parameters
    + sectionid (required, int)
    + termid (required, int)

+ Response 200 (application/json)

        {
            "identifier": "scoutid",
            "photos": true,
            "items": [
                {
                    "firstname": "John",
                    "lastname": "Doe",
                    "photo_guid": "12345678-1234-4567-5678-1234567890ab",
                    "patrolid": -1,
                    "patrol": " ",
                    "sectionid": 12,
                    "enddate": null,
                    "age": "24 / 4",
                    "patrol_role_level_label": "Crew Leader",
                    "active": true,
                    "scoutid": 1233
                },
                {
                    "firstname": "Jane",
                    "lastname": "Doe",
                    "photo_guid": "12345678-1234-4567-5678-1234567890ab",
                    "patrolid": 0,
                    "patrol": "",
                    "sectionid": 12,
                    "enddate": null,
                    "age": "23 / 7",
                    "patrol_role_level_label": "",
                    "active": true,
                    "scoutid": 1234
                }
            ]
        }

### Get Member Information [POST /ext/members/contact/?action=getIndividual&sectionid={}&scoutid={}&termid={}&context=members]]

+ Response 200 (application/json)
    
        {
            "ok": true,
            "read_only": [],
            "data": {
                "scoutid": "12345",
                "firstname": "First",
                "lastname": "Last",
                "photo_guid": "12345678-1234-4567-5678-1234567890ab",
                "email1": "",
                "phone1": "",
                "address": "",
                "address2": "",
                "dob": "1987-08-05",
                "started": "2004-08-31",
                "joining_in_yrs": "2",
                "parents": "",
                "notes": "",
                "medical": "",
                "religion": "",
                "school": "",
                "ethnicity": "",
                "subs": "",
                "custom1": "",
                "created_date": "0000-00-00 00:00:00",
                "patrolid": "0",
                "patrolleader": "0",
                "startedsection": "2015-06-15",
                "enddate": null,
                "age": "20 years and 1 months",
                "meetings": -1,
                "others": [
                    "Another Group: Leaders"
                ]
            }
        }

## Group Dashboard [/ext/dashboard/]

### Send Email Across Group [POST /ext/dashboard/?action=sendGroupEmail]

+ Parameters
    + from (email) - valid email address which is set as the 'reply to' of the email sent by OSM
    + subject (string) - Subject of email
    + body (HTML) - body of the email
    + sections (int) - JSON array of sectionIDs to send the email to

+ Request (application/x-www-form-urlencoded)
    
        from={from}&
        subject={subject}&
        body={body}&
        emails={sections}
        
+ Response